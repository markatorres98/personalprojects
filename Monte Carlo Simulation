import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import math


# Allows user to input  ticker symbol and number of simulations they want to run
raw_ticker = input("Enter \"AMZN\", \"AAPL\", or \"GOOG\" to get stock information. ")
if raw_ticker in ["AMZN", "AAPL", "GOOG"]:
    ticker = raw_ticker
    raw_number = input("How many simulations do you want? ")
    if int(raw_number) > 0:
        number = raw_number
    else:
        print("ERROR: Invalid Number. ")
else:
    print("ERROR: Invalid Ticker. ")

# Retrieves file information from AAPL.csv, AMZN.csv, GOOG.csv
def retrieve(ticker):
    file_name = ticker + ".csv"
    data_file = pd.read_csv(file_name, delimiter=",")
    return data_file

# Calculates the average for numbers in the num_list
def calc_average(num_list):
    count = len(num_list)
    total = 0
    for i in range(0, count):
        total = total + num_list[i]
    avg = total / count
    return avg

 #Retrieves all  the stocks' data
stock_data = retrieve(ticker)
stock_column = stock_data['Adj Close']
s = stock_column[len(stock_column) - 1]


# Mu Equaiton
def calc_mu_sigma(num_list):
    rel_change = []
    for x in range(1, len(num_list)):
        y = (num_list[x] - num_list[x - 1]) / num_list[x - 1]
        rel_change.append(y)
    mu = calc_average(rel_change)

    # Sigma Equation
    diff_mean = []
    for x in range(1, len(rel_change)):
        y = (rel_change[x] - mu) ** 2
        diff_mean.append(y)
    count = len(diff_mean)
    total = 0
    for a in range(0, len(diff_mean)):
        total = total + diff_mean[a]

    #Returns mu and sigma and gives average value
    avg = total / (count - 1)
    sigma = math.sqrt(avg)
    mu_sigma = [mu, sigma]
    return mu_sigma


# Returns the new stock price after calcualting delta
def random_return(s, mu, sigma):
    retur = np.random.uniform(0, 1)
    delta = (s * mu) + (s * sigma * retur)
    new_stock_price = s + delta
    return new_stock_price

# Starts Running the Monte Carlo Simulation
def simulation(s, mu, sigma):
    simulation = []
    for i in range(0, 252):
        s = random_return(s, mu, sigma)
        simulation.append(s)
    return simulation

# Calculates Mu and Sigma and Prints them
mu_sigma = calc_mu_sigma(stock_column)
mu = mu_sigma[0]
sigma = mu_sigma[1]
print("Mu =" , mu)
print("Sigma = ", mu_sigma[1])

#Plots mu and sigma and graphs them
for x in range(0, int(number)):
    p = simulation(s, mu, sigma)
    plt.plot(p)
    plt.ylabel("Price")
    plt.xlabel("Days")
    plt.suptitle("Monte Carlo Simulation")
plt.show()
